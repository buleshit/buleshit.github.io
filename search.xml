<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[面试研究所]]></title>
      <url>%2F2017%2F03%2F28%2F%E9%9D%A2%E8%AF%95%E7%A0%94%E7%A9%B6%E6%89%80%2F</url>
      <content type="text"><![CDATA[感觉公司很大，占了半个山头。看门卫访客记录，一同面试的都是一流学校，有点压力的说。进门就能感觉是机关大院，踏进去就可以到老的那种。面试三人面一个，类似于答辩。由于不是一心想找工作的，简历上的轻描淡写被当做小辫子了。过程不赘述，岗位实际要求不是很大，毕竟不是市场上的公司不拼会死的。重点吐槽重点吐槽一下，面试问的白痴问题：你遇到的最有意义的bug是什么？开发认为不是bug怎么办？从每家公司离职的原因什么？你怎样看待测试？多家公司同事要你，怎么抉择？你怎样保证你的用例是全面覆盖的？未完，待续。。。个人答案：1、bug千千万，说出来你也不明白。2、我认为开发不是人怎么办？作为测试，要尽可能的发掘问题，把问题暴露出来。至于问题的轻重和修复的必要性，那得要上层决定。难道我每天堵开门门口让他改？3、换工作只有三个原因：钱少、自己能力差待不下去、其他原因。4、连人都留不住的公司，拜拜5、我不能，谢谢。（不知道有用例评审的公司，拜拜）]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[没有技术不可耻，拿无耻来骗人要制止]]></title>
      <url>%2F2017%2F03%2F28%2F%E6%B2%A1%E6%9C%89%E6%8A%80%E6%9C%AF%E4%B8%8D%E5%8F%AF%E8%80%BB%EF%BC%8C%E6%8B%BF%E6%97%A0%E8%80%BB%E6%9D%A5%E9%AA%97%E4%BA%BA%E8%A6%81%E5%88%B6%E6%AD%A2%2F</url>
      <content type="text"><![CDATA[红盟红盟虽落寞已久，但是由于门槛低，学生流量还不少。但是由于管理缺乏，技术人员的缺失，论坛已经是三教九流的聚集地。其中，有一个组织，专门诱导注册新手进入其私群，然后羊入虎口，在所难免。版主机缘巧合，我也入了那个群，群管理就是红盟的新手板块版主by.小漂。群里大都是学生，从论坛而来。直到一天，by.小漂说要组建一个有基础的群，希望大家能支持下（就是每人交5块2，然后开始发资料）。没办法，因为我扣，所以被踢了。可是我不甘心啊，我感觉纯洁的心灵受到了欺骗。于是我就人肉了一番。人肉一搜不要紧，原来这还不是一个人。群里的管理都是一窝的，还扮学生提问题呢。而这个才是他们的老本行，比如这些。就是搜集些老掉牙的资料，去骗骗涉世未深的学生。不过他们团队中也是有人会技术的，比如申请个域名什么的。其他的也不想多说了，资料还有很多，懒得贴了。只是想告诉大家别被这么低档的骗子骗了，说出来丢脸。后续是不是觉得5块2太少？看看这个。他的qq号和手机号都是实名的，差评。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[学写谷歌扩展]]></title>
      <url>%2F2017%2F03%2F09%2F%E5%AD%A6%E5%86%99%E8%B0%B7%E6%AD%8C%E6%89%A9%E5%B1%95%2F</url>
      <content type="text"><![CDATA[最近闲来无事，想学习下谷歌扩展。十分感谢大神的免费分享，图灵免费电子书[谷歌扩展及应用开发]（http://www.ituring.com.cn/minibook/950）没有前端基础，所以只能慢慢啃了。但是在百度主页的调试工具中竟然隐藏着招聘信息。一张网页，要经历怎样的过程，才能抵达用户面前？一位新人，要经历怎样的成长，才能站在技术之巅？好了，继续啃。（若能啃完，会尝试写两个玩玩）]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[博客提交百度验证失败]]></title>
      <url>%2F2017%2F02%2F20%2F%E5%8D%9A%E5%AE%A2%E6%8F%90%E4%BA%A4%E7%99%BE%E5%BA%A6%E9%AA%8C%E8%AF%81%E5%A4%B1%E8%B4%A5%2F</url>
      <content type="text"><![CDATA[起始听说建好的博客不被收录就不会被人搜到，能忍？！提交百度验证，多次失败后得知，百度不收录github.io这种二级域名，崩溃。方式多日之后，斥巨资购买国际顶级域名（6元，年前还是1元的-_-\）。但是多次验证尝试之后，还是失败。先简单描述下三种验证方式：文件验证：您需要下载验证文件，将文件上传至您的服务器，放置于域名根目录下。html标签验证：将html标签添加至网站首页html代码的&lt;head&gt;标签与&lt;/head&gt;标签之间。CNAME验证：您需要登录域名提供商或托管服务提供商的网站，添加新的DNS记录。验证完成后，我们将会认为您是网站的拥有者。为使您的网站一直保持验证通过的状态，请保留验证的文件、html标签或CNAME记录，我们会去定期检查验证记录。301重定向我一直采用的是html文件验证方式，有人表示前两种失败的话可以采用第三种。问题是我已经杠上了。于是乎，我用www.buleshit.xyz提交验证，但是结果一直是301失败。。多次尝试无果之后，尝试用buleshit.xyz提交验证，结果返回：转机文件不符说明内容不一致，先后查看本地source目录和github根目录，最终发现本地得html验证文件在hexo g生成博客的时候对验证文件做了处理。知道这个就好办了，直接登录github，找到上传的html验证文件，将文件内容修改为初始内容。然后回到百度站长平台点击验证。。其实，能直接修改的原因是，验证一次就通过了，无需再次验证。至此，才发现之前自己手动点击的验证，弹出来的界面是经过处理的html文件，因为只关注了内容，并未发现页面细节。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[hexo博客加速之页面压缩]]></title>
      <url>%2F2017%2F02%2F17%2Fhexo%E5%8D%9A%E5%AE%A2%E5%8A%A0%E9%80%9F%E4%B9%8B%E9%A1%B5%E9%9D%A2%E5%8E%8B%E7%BC%A9%2F</url>
      <content type="text"><![CDATA[hexo博客页面大量留白原因因为markdown转html的bug，致使生成的html留有大量的空白，十分的难看，另外就是由于性能原因，需要对js和css进行压缩。寻求改善方法在网络的海洋里搜寻好久，终于找到了一个hexo插件hexo-neat。作者在此：https://segmentfault.com/a/1190000005799759配置方法1、下载方法：npm install hexo-neat --save2、在博客的站点配置文件中添加如下配置：12345678910111213141516##hexo-neat页面压缩neat_enable: true neat_html: enable: true exclude: neat_css: enable: true exclude: - &apos;*.min.css&apos;neat_js: enable: true mangle: true output: compress: exclude: - &apos;*.min.js&apos;启用hexo-neat的基础上，可以选择是否压缩HTML、CSS、Js文件，均有相应的开关选项。3、配置完成后生成博客就行。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[mv/cp/ls时产生异常]]></title>
      <url>%2F2017%2F02%2F15%2Fmv-cp-ls%E6%97%B6%E4%BA%A7%E7%94%9F%E5%BC%82%E5%B8%B8%2F</url>
      <content type="text"><![CDATA[使用ls或mv *命令时, 产生&quot;Arguments too long&quot;或&quot;Array list too long&quot;的错误信息使用cp时，产生cp: will not overwrite just-created &#39;xxxx&#39;解答：该错误的产生是由于/usr/include/sys/limits.h文件中ARG_MAX参数对应值的限制，最大值为24576，并且无法改变此限制。因此当某目录下的文件数超过24576时，可以使用下面的命令列示、删除或移动所有的文件：列示文件：find &lt;path&gt; -name &quot;*&quot; | xargs ls -l删除文件：find . -name &quot;*&quot; |xargs rm {}移动所有文件至目标目录：find &lt;/sourcedirectory&gt; -name &quot;*&quot; | xargs -I {} mv {}&lt;/destinationdir&gt;4.复制所有文件至目标目录：find ${src_dir} -type f | xargs -i cp {} ${dst_dir}]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[17年情人节]]></title>
      <url>%2F2017%2F02%2F14%2F17%E5%B9%B4%E6%83%85%E4%BA%BA%E8%8A%82%2F</url>
      <content type="text"><![CDATA[转眼都快两年了。这两年，你转变很大，工作能力增长了，也懂事多了，虽然还时不时的闹小脾气。放心吧，还有那么多年，我会陪伴着你。老婆，我爱你，咱去领个证吧。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[面试杭州市民卡]]></title>
      <url>%2F2017%2F02%2F14%2F%E9%9D%A2%E8%AF%95%E6%9D%AD%E5%B7%9E%E5%B8%82%E6%B0%91%E5%8D%A1%2F</url>
      <content type="text"><![CDATA[体验先谈谈对市民卡的体验，在杭州也好几年了 ，从最开始的公交T卡换到现在的市民卡，从以前一个月的办卡期到现在两小时拿卡，从以前到处找网点充值到现在线上充值（线下需补登）。也算是市民卡的真实用户了。印象约的3点面试，2点50到的前台，拿了份资料填写去咖啡吧填写资料。边上一桌好像在开会，讨论的是惠民金融，争议点是用户的密钥是用时获取还是先存着用时告知用户。10分钟左右填完，被告知去会议室等。等了大概一个小时。过程面试官是一位中年女性，大概是部门经理。先看我的资料，避免尴尬，照例让我做个自我介绍。看她没怎么听，我也就随便说说。她感兴趣的点就这么几个：毕业三年多，相对来说工作跟换有点频繁相对现在的工作，工资要求好像有点高是否在杭州发展其他的就问些工作技能相关的东西。然后让我提问。工作性质（哪一类的测试）工作强度（早9晚5.30，看项目加班，双休）市民卡充值为何要补登这一个流程完了，当我提到第三个问题时，对面就停不下来了，言语中透露着自豪。而补登的原因是避免钱在远端的话，在比较密集的地方（地铁刷卡入站处）提交会导致访问失败，故将余额保存在卡中（卡中是可以改的哦！！！估计系统应该有记录可以校验），所以需要补登时写入卡中。如果有下次见面机会的话，我会提议省去补登步骤，充值后首次刷卡自动补登。结语总体了解来看，公司内部有点像上家，发展有点缓慢，估计是没有竞争对手的原因吧。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[markdown常用语法]]></title>
      <url>%2F2017%2F02%2F13%2Fmarkdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%2F</url>
      <content type="text"><![CDATA[1.标题使用：#..#+空格+内容示例：一级标题二级标题、、、六级标题2.无序列表使用：>+空格+*+空格+内容示例：八千年玉老，一夜枯容，问苍天此生何必？昨夜风吹处，落英听谁细数。九万里苍穹，御风弄影，谁人与共？千秋北斗，瑶宫寒苦，不若神仙眷侣，百年江湖。使用：-+空格+内容示例：你说的话 ，我连个标点符号都不信你爸妈要是把当年那十分钟用来散步多好别人都是来走秀的，只有我是来真心表演的3.字体处理加粗 ：**+内容+**示例：八百标兵奔北坡斜体 ：*+内容+*示例： 东边来了个喇嘛加粗倾斜：***+内容+***示例： 新年快乐4.添加链接文字链接:[描述](网址)示例：个人博客图片链接：![图片名]（网址）示例：5.文字引用使用 &gt; 表示文字引用。示例：野火烧不尽，春风吹又生这是普通得不能再普通的普通。。。6.行内代码块使用 `代码` 表示行内代码块。示例：让我们聊聊 html。7.代码块使用：1、可以使用&lt;\pre&gt;代码&lt;\pre&gt;2、也可以另起一行空4格，再贴入代码示例：这是一个代码块，此行左侧有四个不可见的空格。 8.删除线使用 ~~ 表示删除线。示例：这是一段错误的文本。9.表格支持示例：使用：-表示宽度，：表示居中/左右对齐项目价格数量计算机$16005手机$1212管线$12340.待办事宜 Todo 列表使用带有 [ ] 或 [x] （未完成或已完成）项的列表语法撰写一个待办事宜列表，并且支持子列表嵌套以及混用Markdown语法，例如：[ ] 个人技能[ ] 熟练使用Word、Visio、Excel、Dita软件[ ] 简单使用PPT制作动画[x] 简单使用CHM和PS[x] 熟悉MySQL数据库[x] 安装配置[x] 增删改查[ ] 七月旅行准备[ ] 准备邮轮上需要携带的物品[ ] 浏览日本免税店的物品[x] 购买蓝宝石公主号七月一日的船票]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[逃离滨江]]></title>
      <url>%2F2017%2F02%2F13%2F%E9%80%83%E7%A6%BB%E6%BB%A8%E6%B1%9F%2F</url>
      <content type="text"><![CDATA[本人现租滨江，因女友工作换到西溪附近，打算换到西溪附近。故今天(2017年2月11日)去西溪周边看了一圈。从西溪花园各苑(8个苑)看到西溪雅苑。其中西溪花园的蒹葭苑是9层电梯房，其余各苑都是6层小高层。但是今天看到西溪花园蒹葭苑和西溪北苑的社区安全不是很好，群租太多。有的一栋楼从楼下到楼顶每层都是群租房 ，人口密度相当大。现在说说情况，西溪花园和西溪雅苑房源还是很多的，到公告栏就会很多大妈拉你去看的。实话说，比滨江便宜，但是转了一天，没找到合适的。都是隔断的，不能忍。情况大致如下:西溪花园蒹葭苑:一室一厅朝南带阳台，高层有电梯，有小洗衣机，独立厨卫(小而脏)，2100/月，可移动橱柜，水4电1。不考虑。西溪花园某苑:二楼一室一厅朝北，带冰箱和洗衣机，不可移动橱柜，独立厨卫，水电同上。还挺喜欢的，但是没定。西溪花园某苑:其他看了很多，都不满意(要求太高)。西溪雅苑:2室新装修朝南大阳台，独立厨卫(大而干净)，不可移动橱柜，水电同上，2600/月，太贵，而且两室也浪费了，适合一家人(三人以上)西溪雅苑:朝南一楼一室一厅，独立厨卫，有洗衣机，可移动橱柜，水电同上，1800/月。西溪雅苑:6楼无电梯一室一厅朝北，独立厨卫(大而干净)，水电同上，可移动橱柜，有点喜欢，没定。20170212更新:今天有事去了趟三墩，顺便看了下周边租房情况:慧仁家园:朝北单间(隔断)，独立厨卫(脏)，可移动橱柜(在我眼里只分可移动和不可移动的)，1400/月，水4电1。不考虑。慧仁家园:朝北一室一厅(隔断)，独立厨卫，带洗衣机，可移动橱柜，2200/月，水电同上。不知道房东是怎么想的，房间很小，一床一柜已满，客厅稍大。不考虑。同仁家园:朝南单间，独立厨卫(都朝南)，带洗衣机带冰箱彩电，不可移动橱柜，1700/月，水3电1。6楼无电梯(搬家要痛苦)，只能说房东好人，价格很实在。但是在看房的时候，别人来电话说要定下。有点可惜，虽然喜欢但是没到让我和别人起争执的程度。滨江现在住的房子要是有人感兴趣请留言咨询价格。春波东苑朝南次卧，非隔断，独卫，带客厅(公用)，不可移动大橱柜，厨房公用，水电按峰谷电，带燃气，带独立洗衣机，冰箱共用，有地下储物间可停自行车和电瓶车。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Google搜索之高级使用篇]]></title>
      <url>%2F2017%2F02%2F06%2FGoogle%E6%90%9C%E7%B4%A2%E4%B9%8B%E9%AB%98%E7%BA%A7%E4%BD%BF%E7%94%A8%E7%AF%87%2F</url>
      <content type="text"><![CDATA[基础篇：intitle：搜索网页标题中包含有特定字符的网页。例如intitle: 后台，这样网页标题中带有‘后台’的网页都会被搜索出来。inurl：搜索包含有特定字符的URL。例如inurl:admin，可以用来查找网站后台。intext: 搜索网页正文内容中的指定字符，例如intext:操作系统。可以搜索含有‘操作系统’的页面Filetype: 搜索指定类型的文件。例如操作系统 filetype:pdf，就可以找到关于操作系统的pdf文档。Site：找到与指定网站有联系的URL。例如Site：baidu.com。所有和这个网站有联系的URL都会被显示。movie: 当我们用movie提交查询的时候，Google会返回跟查询关键词相关的电影信息。(当前只支持英文Google)info: 查询网站的一些信息。例如info:bbs.byr.cn，它只会返回一个结果，是一个选择列表，列表的选项是这个网站的某一方面的信息。info=cache+related+link+site+intext+intitle。双引号: 代表完全匹配，使关键词不分开，顺序都不能变。减号: 减号与前一个关键词之间一定要有一个空格，与后一个关键词之间一定不能有空格。搜索结果为，匹配前一个关键词但不匹配后一个关键词的结果。例如seo -搜索引擎。AND: 逻辑与，这个命令我们其实一直都在用，只是没有意识到。一般用空格代替，还可以用“+”代替。例如霹雳布袋+败亡之剑，返回的结果同时包含两者。weather: 查询某一地区或城市的天气。不过我们这一地区或城市必须是Google能识别的，例weather:beijing，Google将会给我们返回北京的天气。星号（*）: 通配符，可以匹配任意字符串。例如搜索*擎，则返回的结果中不仅有“搜索引擎”，还有“搜索巨擎”之类的。allinurl: 结果的url中包含多个关键词。例如allinurl:byr jobs，等于inurl:byr inurl:jobs。allinurl也是排他性指令define: 查询关键词的词义，起的是字典的作用。Google会返回包含查询关键词定义的网页，例define:computer，支持汉字哦！进阶篇：查找后台地址：site:域名inurl:login|admin|manage|member|admin_login|login_admin|system|login|user|main|cms查找文本内容：site:域名 intext:管理|后台|登陆|用户名|密码|验证码|系统|帐号|admin|login|sys|managetem|password|username查找可注入点：site:域名 inurl:aspx|jsp|php|asp查找上传漏洞：site:域名 inurl:file|load|editor|Files查看脚本类型：site:域名 filetype:asp/aspx/php/jsp迂回策略：inurl:cms/data/templates/images/index/网络设备关键词：intext:WEB Management Interface for H3C SecPath Series存在的数据库：site:域名 filetype:mdb|asp|#]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[今天是个好日子]]></title>
      <url>%2F2017%2F01%2F18%2F%E4%BB%8A%E5%A4%A9%E6%98%AF%E4%B8%AA%E5%A5%BD%E6%97%A5%E5%AD%90%2F</url>
      <content type="text"><![CDATA[今天好兄弟李四结婚，不能到场祝贺，实之憾事。后遇之期，痛饮三杯。祝：白首齐眉鸳鸯比翼,青阳启瑞桃李同心。]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[github+hexo博客搭建]]></title>
      <url>%2F2017%2F01%2F18%2Fgithub-hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%2F</url>
      <content type="text"><![CDATA[写这篇博文并不是为了记录操作步骤，因为步骤确实很繁琐，并且偏向个人爱好的配置居多，无法面面俱到。本篇博文主要记录自己搭建过程中遇到的坑，然后给小白提供下方向和经验。一、git和nodejs等组件的下载与安装1、git下载安装,下载对应平台的git安装包，cmd中测试git –version ，如果不识别命令，请将git安装目录添加至系统环境变量。下载地址：https://git-scm.com/downloads2、node.js下载安装，安装完成后，cmd中输入node -v,如果不能打印当前node版本号即不识别node命令，则请将node的安装目录添加到系统环境变量。下载地址：https://nodejs.org/en/3、安装hexo,在cmd中输入 npm install hexo （npm是node的包管理工具，如果此处无法识别npm命令，请检查node的环境变量配置或命令行进入到node的安装目录执行次命令。安装报错，如下：npm warn deprecated swig@1.4.2 This package is no longer maintained.(此处应该张图，还没找到合适方式强入)。百度得知，是因为下载源不可用，找了个镜像源，地址如下：http://npm.taobao.org/具体使用说明，上述网址内有描述，我们这里就用：npm install -g hexo –registry=https://registry.npm.taobao.org安装完成。二、本地博客创建与测试1、新建个存放博客文章的目录文件夹，在cmd中进入该目录，输入hexo init ,完成初始化（下载相关配置和依赖）又报了和上面一样的问题而终止了、、、。百度搜索了一通没找到对应原因，只好硬着头皮继续了。输入npm install，结果报错。然后跳过输入hexo server 启动服务，显示本地服务启动成功！！！（实在不知道前面的报错是什么鬼，有人知道的话，希望能告知下，不吝感激）。2、打开浏览器，输入地址(http://localhost:4000/)回车之后就打开我们的博客了。到这步，我们的博客基本已经完成了，但是还能在本地使用。三、上传到github1、先注册github，创建新的仓库，命名为your_user_name.github.io。2、建立本地仓库与github仓库的联系。进入本地博客目录，打开站点配置文件_config.yml文件，修改对应位置为： deploy: type: git repository: https://github.com/buleshit/buleshit.github.io.git branch: master message: update 这里有两个重要的参数：（其他两个参数可以参照着写）1）type：Hexo之前的版本好像是填github，但是Hexo3.0之后，必须填git，我的Hexo是最新的3.2.2，填写git。2）repository这个参数，很重要，它就是用来链接我们在github上创建的创库。看网上有的人使用SSH，但是SSH配置起来相对有些复杂，我这里用的是HTTPS方式，网上借鉴的方法。3、接下来就是将博客发布到远端：npm install hexo-deployer-git --save hexo clean hexo g hexo d 此时，应该会弹出输入用户名和密码的对话框，正确输入github的账户和密码。完成后会打印Deploy done:git，打开浏览器输入（https://your_user_name.github.io） ,回车后打开你的个人博客站点。4、后面还可以自己购买域名，设置DNS，来优化我们的博客，让其显得高大上些，这里不做赘述。因为重点是博文质量，其他花哨的东西后面再弄不急。四、主题及其他优化关于主题的设置也不想多说了，因为都是自定义的东西，根据自己喜好来。我用的是next的主题，大家可以浏览下。写这篇博客的原因是记录中间遇到的问题，不能面面俱到，相信把关键词给大家，大家按需学习配置就行。关键词如下：主题配置：设置RSS、添加标签的tags页面、添加分类页面、添加404页面、代码高亮、侧边栏、友情链接、菜单栏等等。其他三方：多说评论、百度统计、站内搜索、阅读量统计等等。部分参考链接：主题官网：https://hexo.io/themes/next主题的配置和优化：http://blog.csdn.net/willxue123/article/details/50994852添加阅读量统计：http://www.joryhe.com/2016-05-29-how_to_create_leancloud_read_Counter.html添加友情链接：http://blog.csdn.net/itmyhome1990/article/details/43489361http://www.jianshu.com/p/3884e5cb63e5访问速度优化：http://www.cnblogs.com/jarson-7426/p/5660424.htmlhttp://www.joryhe.com/2016-06-05-hexo_site_seo_speed_more_optimization.html]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[hello venus]]></title>
      <url>%2F2017%2F01%2F16%2Fhello-venus%2F</url>
      <content type="text"><![CDATA[]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F01%2F13%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.Quick StartCreate a new post1$ hexo new "My New Post"More info: WritingRun server1$ hexo serverMore info: ServerGenerate static files1$ hexo generateMore info: GeneratingDeploy to remote sites1$ hexo deployMore info: Deployment]]></content>
    </entry>

    
  
  
</search>
